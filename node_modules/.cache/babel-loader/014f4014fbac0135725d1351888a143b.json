{"ast":null,"code":"var _jsxFileName = \"/Users/jerome/Desktop/dev/mesto-react-main/src/components/PopupUpdateAvatar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction popupUpdateAvatar(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    buttonText\n  } = _ref;\n  const [avatar, setAvatar] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n  const avatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  React.useEffect(() => {\n    setAvatar(currentUser.avatar);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    buttonText: buttonText,\n    handleSubmit: handleSubmit,\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"update_avatar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: \"form__text\",\n      name: \"url_avatar\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      ref: avatarRef,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__error\",\n      id: \"url_avatar-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(popupUpdateAvatar, \"JmQv/cRnXB6MeSZkPbzRnGc4lSw=\");\n\nexport default popupUpdateAvatar;","map":{"version":3,"sources":["/Users/jerome/Desktop/dev/mesto-react-main/src/components/PopupUpdateAvatar.js"],"names":["React","PopupWithForm","CurrentUserContext","popupUpdateAvatar","isOpen","onClose","buttonText","avatar","setAvatar","useState","currentUser","useContext","avatarRef","useRef","handleSubmit","e","preventDefault","onUpdateAvatar","current","value","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;;;AAEA,SAASC,iBAAT,OAA2D;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAgC;AAEvD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA5B;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACW,UAAN,CAAiBT,kBAAjB,CAApB;AACA,QAAMU,SAAS,GAAGZ,KAAK,CAACa,MAAN,EAAlB;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,cAAc,CAAC;AACbV,MAAAA,MAAM,EAAEK,SAAS,CAACM,OAAV,CAAkBC;AADb,KAAD,CAAd;AAGD;;AAGDnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,SAAS,CAACE,WAAW,CAACH,MAAb,CAAT;AACH,GAFC,EAEC,CAACG,WAAD,CAFD;AAMF,sBACI,QAAC,aAAD;AAAe,IAAA,MAAM,EAAEN,MAAvB;AAA+B,IAAA,OAAO,EAAEC,OAAxC;AAAiD,IAAA,UAAU,EAAEC,UAA7D;AAAyE,IAAA,YAAY,EAAEQ,YAAvF;AAAqG,IAAA,KAAK,EAAC,uFAA3G;AAA6H,IAAA,IAAI,EAAC,eAAlI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,SAAS,EAAC,YAA5B;AAAyC,MAAA,IAAI,EAAC,YAA9C;AAA2D,MAAA,WAAW,EAAC,wFAAvE;AAA0F,MAAA,GAAG,EAAEF,SAA/F;AAA0G,MAAA,QAAQ;AAAlH;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA3BQT,iB;;AA6BT,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction popupUpdateAvatar({ isOpen, onClose, buttonText}) {\n\n    const [avatar, setAvatar] = React.useState('')\n    const currentUser = React.useContext(CurrentUserContext)\n    const avatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n      \n        onUpdateAvatar({\n          avatar: avatarRef.current.value\n        });\n      } \n   \n    \n      React.useEffect(() => {\n        setAvatar(currentUser.avatar);\n    }, [currentUser])\n\n    \n\n    return (\n        <PopupWithForm isOpen={isOpen} onClose={onClose} buttonText={buttonText} handleSubmit={handleSubmit} title=\"Обновить аватар\" name=\"update_avatar\">\n            <input type=\"url\" className=\"form__text\" name=\"url_avatar\" placeholder=\"Ссылка на аватар\" ref={avatarRef} required/>\n            <span className=\"form__error\" id=\"url_avatar-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default popupUpdateAvatar;"]},"metadata":{},"sourceType":"module"}