{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      endpoint,\n      headers\n    } = _ref;\n    this._endpoint = endpoint;\n    this._headers = headers;\n  }\n\n  _resStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._endpoint}/users/me`, {\n      headers: this._headers\n    }).then(this._resStatus);\n  }\n\n  getCardsData() {\n    return fetch(`${this._endpoint}/cards`, {\n      headers: this._headers\n    }).then(this._resStatus);\n  }\n\n  updateUserData(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._endpoint}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._resStatus);\n  }\n\n  addCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(`${this._endpoint}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._resStatus);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._endpoint}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._resStatus);\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._endpoint}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._resStatus);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._endpoint}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._resStatus);\n  }\n\n  updateAvatar(url) {\n    return fetch(`${this._endpoint}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: url\n      })\n    }).then(this._resStatus);\n  }\n\n}\n\nconst api = new Api({\n  endpoint: 'https://mesto.nomoreparties.co/v1/cohort-29',\n  headers: {\n    authorization: '78fb05fc-0800-40e0-9053-b1d17c19d9a5',\n    'Content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/jerome/Desktop/dev/mesto-react-main/src/utils/Api.js"],"names":["Api","constructor","endpoint","headers","_endpoint","_headers","_resStatus","res","ok","json","Promise","reject","status","getUserData","fetch","then","getCardsData","updateUserData","name","about","method","body","JSON","stringify","addCard","link","deleteCard","cardId","setLike","deleteLike","updateAvatar","url","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({endpoint, headers}){\n        this._endpoint = endpoint\n        this._headers = headers\n    }\n\n    _resStatus(res) {\n        if (res.ok) {\n            return res.json();\n        } \n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    \n\n    getUserData() {\n        return fetch(`${this._endpoint}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._resStatus);\n    }\n\n    getCardsData() {\n        return fetch(`${this._endpoint}/cards`, {\n            headers: this._headers\n        })\n        .then(this._resStatus);\n    }\n\n    updateUserData({name, about}) {\n        return fetch(`${this._endpoint}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers, \n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        })\n        .then(this._resStatus)\n    }\n\n    addCard({name, link}) {\n        return fetch(`${this._endpoint}/cards`, {\n            method: 'POST',\n            headers: this._headers, \n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        })\n        .then(this._resStatus)\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._endpoint}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers, \n        })\n        .then(this._resStatus)\n    }\n\n    setLike(cardId) {\n        return fetch(`${this._endpoint}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers, \n        })\n        .then(this._resStatus)\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._endpoint}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers, \n        })\n        .then(this._resStatus)\n    }\n\n    updateAvatar(url) {\n        return fetch(`${this._endpoint}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers, \n            body: JSON.stringify({\n                avatar: url\n            })\n        })\n        .then(this._resStatus)\n    }\n\n}\n\nconst api = new Api({\n    endpoint: 'https://mesto.nomoreparties.co/v1/cohort-29',\n    headers: {\n      authorization: '78fb05fc-0800-40e0-9053-b1d17c19d9a5',\n      'Content-type': 'application/json'\n    }\n  })\n\nexport default  api;"]},"metadata":{},"sourceType":"module"}