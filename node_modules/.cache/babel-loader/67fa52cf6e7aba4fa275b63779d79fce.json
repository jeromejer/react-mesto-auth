{"ast":null,"code":"import _classCallCheck from\"/Users/jerome/Desktop/dev/mesto-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jerome/Desktop/dev/mesto-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var endpoint=_ref.endpoint,headers=_ref.headers;_classCallCheck(this,Api);this._endpoint=endpoint;this._headers=headers;}_createClass(Api,[{key:\"_resStatus\",value:function _resStatus(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this._endpoint,\"/users/me\"),{headers:this._headers}).then(this._resStatus);}},{key:\"getCardsData\",value:function getCardsData(){return fetch(\"\".concat(this._endpoint,\"/cards\"),{headers:this._headers}).then(this._resStatus);}},{key:\"updateUserData\",value:function updateUserData(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._endpoint,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._resStatus);}},{key:\"addCard\",value:function addCard(_ref3){var name=_ref3.name,link=_ref3.link;return fetch(\"\".concat(this._endpoint,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._resStatus);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._endpoint,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._resStatus);}},{key:\"setLike\",value:function setLike(cardId){return fetch(\"\".concat(this._endpoint,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this._headers}).then(this._resStatus);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._endpoint,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._resStatus);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this.setLike(cardId);}else{return this.deleteLike(cardId);}}},{key:\"updateAvatar\",value:function updateAvatar(url){return fetch(\"\".concat(this._endpoint,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:url})}).then(this._resStatus);}}]);return Api;}();var api=new Api({endpoint:'https://mesto.nomoreparties.co/v1/cohort-29',headers:{authorization:'78fb05fc-0800-40e0-9053-b1d17c19d9a5','Content-type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/jerome/Desktop/dev/mesto-react-main/src/utils/Api.js"],"names":["Api","endpoint","headers","_endpoint","_headers","res","ok","json","Promise","reject","status","fetch","then","_resStatus","name","about","method","body","JSON","stringify","link","cardId","isLiked","setLike","deleteLike","url","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({endpoint, headers}){\n        this._endpoint = endpoint\n        this._headers = headers\n    }\n\n    _resStatus(res) {\n        if (res.ok) {\n            return res.json();\n        } \n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    \n\n    getUserData() {\n        return fetch(`${this._endpoint}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._resStatus);\n    }\n\n    getCardsData() {\n        return fetch(`${this._endpoint}/cards`, {\n            headers: this._headers\n        })\n        .then(this._resStatus);\n    }\n\n    updateUserData({name, about}) {\n        return fetch(`${this._endpoint}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers, \n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        })\n        .then(this._resStatus)\n    }\n\n    addCard({name, link}) {\n        return fetch(`${this._endpoint}/cards`, {\n            method: 'POST',\n            headers: this._headers, \n            body: JSON.stringify({\n                name: name,\n                link: link\n            })\n        })\n        .then(this._resStatus)\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._endpoint}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers, \n        })\n        .then(this._resStatus)\n    }\n\n    setLike(cardId) {\n        return fetch(`${this._endpoint}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers, \n        })\n        .then(this._resStatus)\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._endpoint}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers, \n        })\n        .then(this._resStatus)\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n          return this.setLike(cardId) \n        } else {\n          return this.deleteLike(cardId)\n        }\n      }\n\n    updateAvatar(url) {\n        return fetch(`${this._endpoint}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers, \n            body: JSON.stringify({\n                avatar: url\n            })\n        })\n        .then(this._resStatus)\n    }\n\n}\n\nconst api = new Api({\n    endpoint: 'https://mesto.nomoreparties.co/v1/cohort-29',\n    headers: {\n      authorization: '78fb05fc-0800-40e0-9053-b1d17c19d9a5',\n      'Content-type': 'application/json'\n    }\n  })\n\nexport default  api;"]},"metadata":{},"sourceType":"module"}